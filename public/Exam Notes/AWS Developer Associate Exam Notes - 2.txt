EC2 Lab
  - EC2 instances are created from Amazon Machine Images (AMIs)
  - Detailed CloudWatch monitoring monitors every minute, versus every 5 minutes for default monitoring
  - Use the EC2 User Data section under Advanced Details to create a bootstrap script
  - The EC2 Security Group is a virtual firewall controlling traffic in and out to your EC2 instance
  - You need a public key and private key pair to launch an EC2 instance
  - The public key to an EC2 instance is like the lock and the private key is the key to the lock
Elastic Load Balancers
  - Three types of load balancers
     - Application Load Balancer: operates at OSI layer 7
     - Network Load Balancer: operates at OSI layer 4; used for very fast performance routing; most expensive ELB
     - Classic Load Balancer: legacy, no longer recommended
  - Application load balancers
     - best suited for http and https traffic
     - operate at layer 7 and are application aware
  - Network load balancers
     - best suited for tcp traffic where extreme performance is required
     - operate at the connection level (layer 4)
     - capable of handling millions of requests per second
     - maintains ultra-low latency
  - Classic load balancers
     - can load balance http/https applications
     - use layer 7-specific features such as sticky sessions, but not as intelligent as application load balancer on layer 7
     - can also function as strict layer 4 for applications that rely purely on tcp traffic
     - if your application is having issues, the classic load balancer will respond with a 504 (gateway timeout) meaning the application is not responding within the idle timeout period
       - remediate by scaling up or out
  - X-Forwarded-For header
     - used to get the user requesting ip address (the IPv4 address) that is behind the ELB
Route 53
  - Route 53 is AWS's DNS service
  - Route 53 allows you to map your domain names to
     - EC2 Instances
     - Load Balancers
     - S3 Buckets
     - CloudFront Distributions
     - Elastic Beanstalk environments
  - An Alias in Route 53 tells Route 53 where to route a request to the domain name associated with the Alias
  - Record Set types
     - A - IPv4 address
     - CNAME - Canonical name
     - MX - Mail Exchange
     - AAAA - IPv6 address
     - TXT - text
     - PTR - pointer
     - SRV - Service locator
     - SPF - Sender Policy Framework
     - NAPTR - Name Authority Pointer
     - CAA - Certification Authority Authorization
     - SOA - Start of Authority
  - The Zone Apex Record, or naked domain name, is the domain without any prefix, such as vincebloise.com versus www.vincebloise.com
  - When selecting an A Record, you can choose an Alias, which in Route 53 is an alias for an AWS resource
  - An Alias in Route 53 is created at the Zone Apex, or naked domain name level
  - An Alias in Route 53 is only supported by A and AAAA record set types
AWS CLI
  - Least Privilege - Always give your users the minimum amount of access required
  - Create Groups - Assign your users to groups. Your users will automatically inherit the permissions of the group. The group's
    permissions are assigned using policy documents.
  - Secret Access Key - You will this key only once. If you do not save it, you can delete the Key Pair (Access Key and Secret Access Key)
    and regenerate it. Once you generate a new key pair you will need to run aws configure again.
  - Do not use just one access key - Do not create just one access key and share it with all of your developers.
    Create one key pair per developer.
  - You can use the CLI on you PC - You can install the cli on your MAC, Linux, or Windows PC.

EC2 with Roles
  - Roles allow you to not have to use Access Key IDs and Secret Access keys
  - Roles are preferred from a security perspective
  - Roles are controlled by policies
  - You can change a policy on a role and it will immediate affect on the EC2 instance
  - You can attach and detach roles to running EC2 instances without having to stop or terminate the instance
  - When you get a question asking which to choose: Access Keys or Roles, always choose Roles
EC2 with Attached Encrypted EBS Volume
  - EBS volumes created from encrypted snapshots are automatically encrypted
  - EBS volumes created from unencrypted snapshots are automatically unencrypted
  - EBS volumes have to be in the same availability zone as the EC2 instance to which they are attached
  - Unmount an EBS volume before creating a snapshot of it
  Two ways to encrypt an EBS root volume
  - To encrypt an unencrypted EBS volume, take a snapshot of the volume, then copy the snapshot and encrypt the copy.
    Then create an image (AMI) from the encrypted snapshot.
  - You can also encrypt a root EBS volume using the operating system level encryption through commands or tools like BitLocker in Windows
  - You can encrypt additional attached EBS volumes using the console, the CLI, or API
RDS 101 (START HERE)
  - RDS is OLTP
  - The relational database types in RDS:
    - SQL Server
    - Oracle
    - MySQL Server
    - PostgreSQL
    - Aurora
    - MariaDB
  - Non Relational Databases
    - Databases that contains collections (lie a table), documents (like a row), and key value pairs (like fields)
    - Don't have to predefine the table structure
  - Data Warehouses
    - Used for business intelligence
    - Data scientists use tools like Cognos, Jaspersoft, SQL Server Reporting Services, Oracle Hyperion, SAP NetWeaver to interrogate data warehouses
    - Used to pull in very large and complex datasets
    - Used by management to do queries on data (such as current performance vs targets, etc.)
    - Production data extracted into the data warehouse
  - OLTP vs OLAP
    - Online Transaction Processing (OLTP) differs from Online Analytics Processing (OLAP) in terms of the types of queries you will run against them.
    - OLTP: get OrderNumber 12345, pulls up one row: the transaction
    - OLAP: get Net Profit for EMEA and Pacific for the blah product, pulls large numbers of records
    - OLAP - RedShift
  - ElastiCache
    - A web service that makes it easy to deploy, operate, and scale an in-memory cache in the cloud
    - Supports two open-source in-memory caching engines
      - Memcached
      - Redis
  - MySQL default port 3306
  - If connection from web server running on EC2 instance fails to connect to MySQL server instance (Unable to Connect to MySQL error):
      - Open up port 3306 in the security group which the MySQL instance is in to the security group which your EC2 instance is in
RDS Multi-AZ and Read Replicas
  - There are two types of backups for AWS:
    1) Automated backups
    2) Database snapshots
  - Automated backups allow you to recover your database to any point in time within a "retention period."
    - the retention period can be between 1 and 35 days
    - automated backups will take a full daily snapshot and will also store transaction logs throughout the day
    - when you do a recovery, AWS will first choose the most recent daily backup, and then apply transaction logs relevant to that day
      - this allows you to do a point in time recovery down to the second, within the retention period
    - automated backups are enabled by default
    - the backup data is stored in S3 and you get free storage space equal to the size of your database
    - backups are taken within a defined window
    - during the backup window, storage I/0 may be suspended while you data is being backed up and you may experience elevated latency
    - if you delete your RDS instance, your automated backups will also be deleted
    - you can define a backup window of when to start the backup and the duration of the backup
  - DB Snapshots are done manually (ie. they are user initiated.)
    - DB Snapshots are stored even after you delete your original RDS instance, unlike automated backups
  - Restoring backups
    - Whenever you restore either an Automated Backup or a manual Snapshot, the restored version of the database will be a new RDS instance with a new DNS endpoint
  - Encryption
    - Encryption at rest is supported by MySQL, Oracle, SQL Server, PostgreSQL, MariaDB, and Aurora
    - Encryption is done using the AWS key management service (KMS)
    - Once your RDS instance is encrypted, the data stored at rest in the underlying storage is encrypted, as are its automated backups, read replicas, and snapshots
    - At the present time encrypting an existing database is not supported
    - To use RDS encryption for an existing database, you must first create a snapshot, make a copy of that snapshot and encrypt the copy
  - Multi-AZ
    - Changes to the master DB instance are synchronously replicated to the secondary DB instance
    - Multi-AZ is used for disaster recovery only
    - When dealing with RDS you never use ip addresses, you use the DNS endpoint names of your RDS instances
    - When AWS fails over to the secondary RDS instance, it automatically changes the db hostname to the secondary instance's DNS endpoint name in you database configuration
    - Multi-AZ allows you to have an exact copy of your production database in another AZ.
    - AWS handles the replication for you, so when your production database is written to, this write will automatically be synchronized to the standby database
    - In the event of planned database maintenance, DB instance failure, or an AZ failure, RDS will automatically failover to the standby so that database operations can resume quickly without administrative intervention
    - Multi-AZ is used for disaster recovery, not for improving performance; for performance improvement, use Read Replicas
    - Aurora by default is spread across multiple AZs
  - Read Replicas
    - When you do writes to the master RDS instance, these writes are pushed out to the read replica copies of the database
    - Can have up to 5 read replicas per production database
    - Read replicas allow you to scale out, sending many of the reads to the read replicas
    - You can have read replicas of read replicas, these will have some replication latency
    - You can have a read replica in a different AZ, or even in a different region
    - Read replicas allow you to have a read-only copy of your production database
    - Read replicas are achieved by using Asynchronous replication from the primary RDS instance to the read replica.
    - Use read replicas for very read-heavy database workloads
    - Read replica database types available now: MySQL Server, PostgreSQL, MariaDB, Aurora
    - Read replicas are used for scaling, not for DR
    - Must have automatic backups turned on in order to deploy a read replica
    - You can have up to 5 read replica copies of any database
    - You can have read replicas of read replicas, but watch out for latency
    - Each read replica will have its own DNS end point
    - You can have read replicas that have Multi-AZ enabled
    - You can create read replicas of Multi-AZ source databases
    - Read replicas can be promoted to be their own databases. This breaks the replication
    - You can have a read replica in another region
    - You can enable encryption on your read replicas even if your primary DB instance is not encrypted
ElastiCache 101
 - ElastiCache is a web service that makes it easy to deploy, operate, and scale an in-memory cache in the cloud.
 - improves the performance of web applications by allowing you to retrieve information from fast, managed, in-memory caches, instead of relying entirely on slower disk-based databases.
 - can be used to significantly improve latency  and throughput for many read-heavy application workloads (such as social networking, gaming, media sharing, and Q&A portals)
   or compute-intensive workloads (such as a recommendation engine)
 - caching improves application performance by storing critical pieces of data in memory for low-latency access.
 - cached information may include the results of I/O intensive database queries or the results of computationally-intensive calculations
 - Types of ElastiCache
   - Mamcached
     - a widely adopted memory object caching system
     - ElastiCache is protocol compliant with Memcached, so popular tools you use with existing Memcached environments will work seamlessly with the service
   - Redis
     - a popular open-source in-memory key-value store that supports data structures such as sorted sets and lists.
     - ElastiCache supports Master/Slave replication and Multi-AZ which can be used to achieve cross-AZ redundancy
     - if you need multi-AZ redundancy, use Redis
   - although Memcachd and Redis appear similar on the surface (in that they are both in-memory key stores), they are actually quite different in practice.
     - Because of the replication and persistence features of Redis, ElastiCache manages Redis more as a relational database.
     - Redis ElastiCache clusters are managed as stateful entities that include failover, similar to how RDS manages database failover
     - Because Memcached is designed as a pure caching solution with no persistence, ElastiCache manages Memcached nodes as a pool that can grow and shrink, similar to an EC2 Auto Scaling Group
     - Individual Memcached nodes are expendable, and ElastiCache provides additional capabilities here, such as automatic node replacement and Auto Discovery
   - Memcached use cases
     - is object caching your primary goal, for example offload your database?
     - are you interested in as simple a caching model as possible?
     - are you planning on running large scale cache nodes, and require multithreaded performance with utilization of multiple cores?
     - do you want the ability to scale your cache horizontally as you grow?
   - Redis use cases
     - are you looking for more advanced data types, such as lists, hashes, and sets?
     - does sorting and ranking datasets in memory help you, such as with leaderboards?
     - is persistence of your key store important?
     - do you want to run in multiple AWS AZs (Multi-AZ) with failover?
 - Given a scenrio where a particular database is under a lot of stress/load:
   - ElastiCache is a good choice if your database is particularly read-heavy and not prone to frequent changing
   - Redshift is a good choice if the reason your database is feeling stress is because management keep running OLAP transactions on it etc.
 - Use Memcached if
   - object caching is your primary goal
   - if you want to keep things as simple as possible
   - if you want to scale your cache horizontally (scale out)
 - Use Redis if:
   - you have advanced data types, such as lists, hashes, and sets
   - you are doing data sorting and ranking (such as leaderboards)
   - you need data persistence
   - you need Multi-AZ
   - Pub/Sub capabilities are needed
EC2 Summary (START HERE)
 - On Demand - allows you to pay a fixed rate by the hour (or by the second) with no commitment
 - Reserved - provides you with a capacity reservation, and offers a significant discount on the hourly charge for an instance.
   - 1 year or 3 year terms
 - Spot - enables you to bid whatever price you want for an instance capacity, providing for even greater savings if your applications have flexible start and end times
   - If a spot instance is terminated by Amazon, you will not be charged for a partial hour of usage
   - If you terminate an instance, you will be charged for the complete hour in which the instance ran
 - Dedicated hosts - physical EC2 server dedicated for your use.
   - dedicated hosts can help you reduce costs by allowing you to use your existing server bound software licenses
   - also helps with regulatory requirements, some governments don't want multi-tenant virtualization
 - SSD Volumes
   - General Purpose SSD
     - balances price and performance for a wide variety of workloads
   - Provisioned IOPS SSD
     - highest performance SSD volume for mission-critical low-latency or high-throughput workloads
     - anything over 10,000 IOPS you should use Provisioned IOPS SSD
 - Magnetic Volumes
   - Throughput Optimized HDD
     - Low-cost HDD volume designed for frequently accessed, throughput intensive workloads
     - Can't be a boot volume
   - Cold HDD Volumes
     - Lowest cost HDD volume designed for less frequently accessed workloads
     - used for file servers, etc.
     - Can't be a boot volume
   - Magnetic Volumes
     - Previous generation
     - Can be a boot volume
   - ELBs
     - 3 types of load balancers
       - Application Load Balancers
       - Network Load Balancers
       - Classic Load Balancers - if you see "elastic load balancer" they're talking about a classic load balancer
     - 504 error means the gateway has timed out
       - This means that the application is not responding within the idle timeout period
       - Trouble shoot the application; is it the Web Server or Database Server
     - If you need the IPv4 address of your end user, look for the X-Forwarded-For header
   - Route 53
     - Allows you to map your domain names to
       - EC2 Instances
       - Load balancers
       - S3 Buckets
   - CLI
     - Least Privilege
       - Always give your users the minimum amount of access required
     - Create Groups
       - Assign your users to groups
       - Your users will automatically inherit the permissions of the group
       - The group's permissions are assigned using policy documents
     - Secret Access Key
       - You will see the key only once
       - You can delete the key pair and regenerate it, but you'll need to rerun aws configure
     - Don't use just one access key pair and share it with all your developers.
       - Instead, create one key-pair per developer
 - Sample Questions:
  - You are a developer for a genomics firm who are moving their infrastructure to AWS.
    Their environment consists of a three tier web application, a web tier, an application tier and a relational database tier.
    They have a separate fleet of virtual machines that are used to access large HPC clusters on the fly.
    Their lab researches run multiple projects simultaneously and they will need to launch and de-commission 1,000's of nodes on-demand while
    reducing the time required to complete genomic sequencing from weeks to days.
    In order to stay competitive they need to do this at as low cost as possible, with no long term contracts.
    These HPC clusters can run any time day or night and their workloads store information in S3, so the instances can be terminated at any time without any effect on the data.
    What is the most COST EFFECTIVE ec2 pricing model for their requirements?
    - Spot Instances (correct)
    - Reserved Instances
    - Dedicated Host Instances
    - On-Demand Instances
 - You work for a web analytics firm who have recently migrated their application to AWS.
   The application sits behind an Elastic Load Balancer and it monitors user traffic to their website.
   You have noticed that in the application logs you are no longer seeing your users public IP addresses,
   instead you are seeing the private IP address of the elastic load balancer.
   This data is critical for your business and you need to rectify the issue immediately. What should you do?
     - Update the application to log the x-forwarded-for header to get your users public IPv4 addresses (correct)
     - Install a CloudWatch logs agent on the EC2 instance behind the elastic load balancer to monitor the public IPv4 addresses and then stream this data to AWS Neptune
     - Migrate the application to AWS Lambda instead of EC2 and put the lambda function behind a Network Load Balancer
     - Migrate the application in front of a Network Load Balancer and then reverse proxy traffic to your RDS instance
 - You work for an online gaming store which has a global world wide leaderboard for players of the game.
   You need to implement a caching system for your leaderboard that has multiple availability zones in order to prevent an outage.
   Which ElastiCache solution should you use?
     - Redis (correct)
     - Memcached
     - ArangoDB
     - Couchbase
 - You work for a media production company that streams popular TV shows to millions of users.
   They are migrating their web application from an in house solution to AWS.
   They will have a fleet of over 10,000 webservers to meet the demand and will need a reliable layer 4 load balancing solution capable of handling millions of requests
   per second. What AWS load balancing solution would be suit their needs?
     - Network Load Balancer (correct)
     - AWS Direct Connect
     - Application Load Balancer
     - Elastic Load Balancer
 - You work for a government contractor who supply services that are critical to national security.
   Because of this your corporate IT policy states that no multi-tenant virtualization is authorized within the company.
   Despite this, they are interested in moving to AWS but they cannot violate corporate IT policy.
   Which EC2 billing model would you recommend that they use to achieve this?
     - Spot Instances
     - On-demand Instances
     - Reserved Instances
     - Dedicated Host Instances (correct)
 - Which of the following are valid types of load balancers? (Choose 3)
     - Network Load Balancer (correct)
     - Application Load Balancer (correct)
     - Virtual Load Balancer
     - Elastic Load Balancer (correct)
 - You run the internal intranet for a corporate bank. The intranet consists of a number of webservers and a single relational database running Microsoft SQL Server.
   Your peak demand occurs at 9am every week morning when users are first logging in to the intranet.
   They can only log in using the company's internal network and it is not possible to access the intranet from any location other than within the office building for
   security purposes. Management is considering a change and to move this environment to AWS where users will be able to access the intranet via a software VPN.
   You have been asked to evaluate a migration to AWS and to identify the best EC2 billing model for your company's intranet.
   You must keep costs low and to be able to scale at particular times of day. You must maintain availability of the intranet throughout office hours.
   Management does not want to be locked in to any contracts in case for some reason they want to go back to hosting internally.
   What EC2 billing model should you recommend?
     - Spot Instances
     - Reserved Instances
     - Dedicated Host Instances
     - On-demand Instances (correct)
 - You have a three tier web application with a webserver tier, application tier and database tier.
   The application is spread across multiple availability zones for redundancy and is in an autoscaling group with a minimum size of 2 and a maximum size of 10.
   The application relies on connecting to an RDS multi-AZ database. When new instances are launched they download a connection string file which is saved in an encrypted
   S3 bucket using a boot strap script. During a routine scaling event you notice that your new webservers are failing their health checks and are not coming in to service.
   You investigate and discover that the EC2 - S3 read only role that the webservers rely on has no policies attached to it.
   What steps should you take together to remediate this problem while maintaining the principle of least privilege? (Choose 2)
     - Copy the role to a new AMI
     - Create a snapshot of the EBS volume and then restart the instance
     - Terminate the existing instances and allow new instances to come into service (correct)
     - Attach the S3-Administrator policy
     - Create a new role giving lambda permission to execute
     - Attach the S3-Read Only policy to the role (correct)
 - Individual instances are provisioned ______
     - In Availability Zones (correct)
     - In Regions
     - Globally
 - An new CIO joins your company and implements a new company policy that all EC2 instances must have encryption at rest.
   What is the quickest and easiest way to apply this policy to your existing EC2 instances?
     - Create an encrypted AMI of the EC2 volume using Windows Bitlocker.
     - Create a snapshot of the EC2 volume. Then create a copy of that volume, checking the box to enable encryption.
       Create an AMI of the copied snapshot and then redeploy the EC2 instance using the encrypted AMI. Delete the old EC2 instance. (correct)
     - In the AWS console, click on the EC2 instances, click actions and click encrypt EBS volumes.
     - Create an encrypted snapshot of the EC2 volume using the ecrypt on the fly option.
       Create an AMI of the copied snapshot and then redeploy the EC2 instance using the encrypted AMI. Delete the old EC2 instance.
 - You have a very popular blog site, which has recently had a surge in traffic.
   You want to implement an ElastiCache solution to help take the load off the production database and you want to keep it as simple as possible.
   You will need to scale your cache horizontally and object caching will be your primary goal. Which ElastiCache solution will best suit your needs?
     - Redis
     - Memcached (correct)
     - Couchbase
     - ArangoDB
 - In order to enable encryption at rest using EC2 and Elastic Block Store, you must ______
     - Configure encryption using the appropriate Operating Systems file system
     - Configure encryption using X.509 certificates
     - Configure encryption when creating the EBS volume (correct)
     - Mount the EBS volume in to S3 and then encrypt the bucket using a bucket policy.
 - You have an EC2 instance in a single availability zone connected to an RDS instance.
   The EC2 instance needs to communicate to S3 to download some important configuration files from it.
   You try the command aws s3 cp s3://yourbucket /var/www/html however you receive an error message.
   You log in to Identity Access Management (IAM) and discover there is no role created to allow EC2 to communicate to S3.
   You create the role and attach it to the existing EC2 instance. How fast will the changes take to propagate?
     - The same duration as Cloudwatch standard monitoring – 5 minutes
     - It depends on the region and availability zone
     - Immediately (correct)
     - The same duration as Cloudwatch detailed monitoring – 1 minute
 - Your company has a web application on AWS. The application computes thousands of algorithms per second and is very CPU and disk intensive.
   The application runs on a c4.8xlarge, the largest C class instance available.
   The application stores it's data locally on a standard SSD disk. Your application starts to perform slow.
   You check the logs and notice that your disk IO is routinely going above 16,000 IOPS. What should you do to remediate the issue?
     - Migrate the EBS volume from a standard EBS volume to a magnetic volume
     - Migrate the EBS volume from a standard EBS volume to a provisioned IOPS EBS volume (correct)
     - Decrease the size of the EBS volume so as to increase its IOPS performance
     - Change the instance family from a c4.8xlarge to an r4.8xlarge so that you have more memory available to cope with the increased IO
 - You are the IT manager at a furniture retailer and they are considering moving their web application to AWS.
   They currently colocate their servers in a colocation facility and the contract for this facility is now coming to an end.
   Management are comfortable signing a 3 year contract and want to get the cheapest web servers as possible while still maintaining availability.
   Their traffic is very steady and predictable. What EC2 pricing model would you recommend to maintain availability and to get the lowest cost price available?
     - Dedicated Host Instances
     - On-demand Instances
     - Spot Instances
     - Reserved Instances (crooect)
 - You have a word press site hosted on EC2 with a MySQL database hosted on RDS.
   The majority of your traffic is read traffic, there is only write traffic when you create a new blog.
   One of your blogs has gone viral and your wordpress site is struggling to cope.
   You check your cloudwatch metrics and notice your RDS instance is at 100% CPU utilization.
   What two steps should you take to reduce the CPU utilization? (Choose 2)
     - Create multiple RDS read replicas and point multiple EC2 instances to these read replicas thereby spreading the load (correct)
     - Enable Multi-AZ on your RDS instances and point multiple EC2 instances to the new Multi-AZ instances thereby spreading the load
     - Create an elasticache cluster and use this to cache your most frequently read blog posts (correct)
     - Migrate from an Elastic Load Balancer to a Network Load Balancer so you can sustain more connections
